{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react'\n// import {over} from 'stompjs';\n// import SockJS from 'sockjs-client';\n\n// var stompClient =null;\n\n// const onConnected =()=>{      \n//     setUserData({...userData,\"connected\": true});\n//     stompClient.subscribe('/chatroom/public', onMessageReceived);\n//     stompClient.subscribe('/user/'+userData.username+'/private', onPrivateMessage);\n//     userJoin();\n// }\n\n// const onMessageReceived = (payload)=>{\n//     var payloadData = JSON.parse(payload.body);\n//     switch(payloadData.status){\n//         case \"JOIN\":\n//             if(!privateChats.get(payloadData.senderName)){\n//                 privateChats.set(payloadData.senderName,[]);\n//                 setPrivateChats(new Map(privateChats));\n//             }\n//             break;\n//         case \"MESSAGE\":\n//             publicChats.push(payloadData);\n//             setPublicChats([...publicChats]);\n//             break;\n//     }\n// }\n\n// const onPrivateMessage = (payload)=>{\n//     console.log(payload);\n//     var payloadData = JSON.parse(payload.body);\n//     if(privateChats.get(payloadData.senderName)){\n//         privateChats.get(payloadData.senderName).push(payloadData);\n//         setPrivateChats(new Map(privateChats));\n//     }else{\n//         let list =[];\n//         list.push(payloadData);\n//         privateChats.set(payloadData.senderName,list);\n//         setPrivateChats(new Map(privateChats));\n//     }\n// }\n// const onError=()=>{}\n// class ChatRoom2 extends React.Component {\n\n//     render() {\n//       return (\n//         <div className=\"post\">\n//           <h1>{this.props.name} - napisz</h1>\n\n//         <form>\n//             <textarea rows=\"4\" cols=\"50\" name=\"comment\" form=\"usrform\"></textarea>\n//             <input type=\"submit\" value=\"Submit\"></input>\n//         </form>\n//         </div>\n//       );\n//     }\n//      connect() {\n//         let Sock = new SockJS('http://localhost:8080/ws');\n//         stompClient = over(Sock);\n//         stompClient.connect({},onConnected, onError); \n//      }\n//   }\n//   export default ChatRoom2","map":{"version":3,"names":[],"sources":["C:/Users/bober/OneDrive/Pulpit/projekt/klient/src/components/ChatRoom2.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react'\r\n// import {over} from 'stompjs';\r\n// import SockJS from 'sockjs-client';\r\n\r\n\r\n// var stompClient =null;\r\n\r\n// const onConnected =()=>{      \r\n//     setUserData({...userData,\"connected\": true});\r\n//     stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n//     stompClient.subscribe('/user/'+userData.username+'/private', onPrivateMessage);\r\n//     userJoin();\r\n// }\r\n\r\n// const onMessageReceived = (payload)=>{\r\n//     var payloadData = JSON.parse(payload.body);\r\n//     switch(payloadData.status){\r\n//         case \"JOIN\":\r\n//             if(!privateChats.get(payloadData.senderName)){\r\n//                 privateChats.set(payloadData.senderName,[]);\r\n//                 setPrivateChats(new Map(privateChats));\r\n//             }\r\n//             break;\r\n//         case \"MESSAGE\":\r\n//             publicChats.push(payloadData);\r\n//             setPublicChats([...publicChats]);\r\n//             break;\r\n//     }\r\n// }\r\n\r\n// const onPrivateMessage = (payload)=>{\r\n//     console.log(payload);\r\n//     var payloadData = JSON.parse(payload.body);\r\n//     if(privateChats.get(payloadData.senderName)){\r\n//         privateChats.get(payloadData.senderName).push(payloadData);\r\n//         setPrivateChats(new Map(privateChats));\r\n//     }else{\r\n//         let list =[];\r\n//         list.push(payloadData);\r\n//         privateChats.set(payloadData.senderName,list);\r\n//         setPrivateChats(new Map(privateChats));\r\n//     }\r\n// }\r\n// const onError=()=>{}\r\n// class ChatRoom2 extends React.Component {\r\n    \r\n    \r\n//     render() {\r\n//       return (\r\n//         <div className=\"post\">\r\n//           <h1>{this.props.name} - napisz</h1>\r\n        \r\n//         <form>\r\n//             <textarea rows=\"4\" cols=\"50\" name=\"comment\" form=\"usrform\"></textarea>\r\n//             <input type=\"submit\" value=\"Submit\"></input>\r\n//         </form>\r\n//         </div>\r\n//       );\r\n//     }\r\n//      connect() {\r\n//         let Sock = new SockJS('http://localhost:8080/ws');\r\n//         stompClient = over(Sock);\r\n//         stompClient.connect({},onConnected, onError); \r\n//      }\r\n//   }\r\n//   export default ChatRoom2"],"mappings":";AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}